services:

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}  # Load from .env for db as well
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env  # Ensure this loads the .env for PostgreSQL as well

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - default
    env_file:
      - .env 
      
  django:
    build:
      context: .
      dockerfile: Dockerfile
    image: django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/api
    ports:
      - "8000:8000"
    env_file:
      - .env  # Load the .env file for Django
    depends_on:
      - db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}  # Ensure these variables are passed into Django
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db  # Assuming your PostgreSQL container is named 'db'
      POSTGRES_PORT: ${POSTGRES_PORT}

  celery:
    build: .
    command: celery -A api.celery worker --loglevel=info
    depends_on:
      - db
      - redis
      - django
    env_file:
      - .env 

volumes:
  postgres_data:
